{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst STORAGE_KEY = 'smartSuggestPro.usage.v1';\nexport class UsageService {\n  constructor() {\n    this.usage = {};\n    this.load();\n  }\n  load() {\n    try {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      this.usage = raw ? JSON.parse(raw) : {};\n    } catch {\n      this.usage = {};\n    }\n  }\n  save() {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(this.usage));\n  }\n  record(moduleId, context) {\n    const now = Date.now();\n    const rec = this.usage[moduleId] ?? {\n      moduleId,\n      count: 0,\n      lastUsed: now,\n      contexts: {}\n    };\n    rec.count += 1;\n    rec.lastUsed = now;\n    if (context) rec.contexts[context] = (rec.contexts[context] ?? 0) + 1;\n    this.usage[moduleId] = rec;\n    this.save();\n  }\n  getAll() {\n    return Object.values(this.usage);\n  }\n  get(moduleId) {\n    return this.usage[moduleId];\n  }\n  resetAll() {\n    this.usage = {};\n    this.save();\n  }\n  static {\n    this.ɵfac = function UsageService_Factory(t) {\n      return new (t || UsageService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsageService,\n      factory: UsageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["STORAGE_KEY","UsageService","constructor","usage","load","raw","localStorage","getItem","JSON","parse","save","setItem","stringify","record","moduleId","context","now","Date","rec","count","lastUsed","contexts","getAll","Object","values","get","resetAll","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hardik\\Downloads\\smart-suggest-pro-full\\src\\app\\services\\usage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { UsageRecord } from '../models';\n\nconst STORAGE_KEY = 'smartSuggestPro.usage.v1';\n\n@Injectable({ providedIn: 'root' })\nexport class UsageService {\n  private usage: Record<string, UsageRecord> = {};\n\n  constructor() { this.load(); }\n\n  private load() {\n    try {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      this.usage = raw ? JSON.parse(raw) : {};\n    } catch {\n      this.usage = {};\n    }\n  }\n\n  private save() {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(this.usage));\n  }\n\n  record(moduleId: string, context?: string) {\n    const now = Date.now();\n    const rec = this.usage[moduleId] ?? { moduleId, count: 0, lastUsed: now, contexts: {} };\n    rec.count += 1;\n    rec.lastUsed = now;\n    if (context) rec.contexts[context] = (rec.contexts[context] ?? 0) + 1;\n    this.usage[moduleId] = rec;\n    this.save();\n  }\n\n  getAll(): UsageRecord[] { return Object.values(this.usage); }\n  get(moduleId: string) { return this.usage[moduleId]; }\n  resetAll() { this.usage = {}; this.save(); }\n}\n"],"mappings":";AAGA,MAAMA,WAAW,GAAG,0BAA0B;AAG9C,OAAM,MAAOC,YAAY;EAGvBC,YAAA;IAFQ,KAAAC,KAAK,GAAgC,EAAE;IAE/B,IAAI,CAACC,IAAI,EAAE;EAAE;EAErBA,IAAIA,CAAA;IACV,IAAI;MACF,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACP,WAAW,CAAC;MAC7C,IAAI,CAACG,KAAK,GAAGE,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAG,EAAE;IACzC,CAAC,CAAC,MAAM;MACN,IAAI,CAACF,KAAK,GAAG,EAAE;IACjB;EACF;EAEQO,IAAIA,CAAA;IACVJ,YAAY,CAACK,OAAO,CAACX,WAAW,EAAEQ,IAAI,CAACI,SAAS,CAAC,IAAI,CAACT,KAAK,CAAC,CAAC;EAC/D;EAEAU,MAAMA,CAACC,QAAgB,EAAEC,OAAgB;IACvC,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,EAAE;IACtB,MAAME,GAAG,GAAG,IAAI,CAACf,KAAK,CAACW,QAAQ,CAAC,IAAI;MAAEA,QAAQ;MAAEK,KAAK,EAAE,CAAC;MAAEC,QAAQ,EAAEJ,GAAG;MAAEK,QAAQ,EAAE;IAAE,CAAE;IACvFH,GAAG,CAACC,KAAK,IAAI,CAAC;IACdD,GAAG,CAACE,QAAQ,GAAGJ,GAAG;IAClB,IAAID,OAAO,EAAEG,GAAG,CAACG,QAAQ,CAACN,OAAO,CAAC,GAAG,CAACG,GAAG,CAACG,QAAQ,CAACN,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACrE,IAAI,CAACZ,KAAK,CAACW,QAAQ,CAAC,GAAGI,GAAG;IAC1B,IAAI,CAACR,IAAI,EAAE;EACb;EAEAY,MAAMA,CAAA;IAAoB,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACrB,KAAK,CAAC;EAAE;EAC5DsB,GAAGA,CAACX,QAAgB;IAAI,OAAO,IAAI,CAACX,KAAK,CAACW,QAAQ,CAAC;EAAE;EACrDY,QAAQA,CAAA;IAAK,IAAI,CAACvB,KAAK,GAAG,EAAE;IAAE,IAAI,CAACO,IAAI,EAAE;EAAE;;;uBA9BhCT,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAA0B,OAAA,EAAZ1B,YAAY,CAAA2B,IAAA;MAAAC,UAAA,EADC;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}